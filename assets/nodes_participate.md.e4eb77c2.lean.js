import{b as _,m as g,a as b}from"./chunks/coffee_versions.1e3c8526.js";import{c as o}from"./chunks/constants.190e12be.js";import{_ as p,o as s,c as n,k as e,a,t as r,H as h,l as d,Q as m}from"./chunks/framework.25fa9d36.js";const k={name:"ArabicaVersionTags",data(){return{arabicaVersions:_,constants:o}}},C=["href"],V=["href"],w=["href"],A=["href"];function T(i,l,c,f,t,u){return s(),n("ul",null,[e("li",null,[a(" Celestia Chain ID - "),e("a",{href:`https://github.com/celestiaorg/networks/tree/master/${t.constants.arabicaChainId}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.arabicaChainId),9,C)]),e("li",null,[a(" Celestia Node - "),e("a",{href:`https://github.com/celestiaorg/celestia-node/releases/tag/${t.arabicaVersions["node-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.arabicaVersions["node-latest-tag"]),9,V)]),e("li",null,[a(" Celestia App - "),e("a",{href:`https://github.com/celestiaorg/celestia-app/releases/tag/${t.arabicaVersions["app-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.arabicaVersions["app-latest-tag"]),9,w)]),e("li",null,[a(" Rollkit - "),e("a",{href:`https://github.com/rollkit/rollkit/releases/tag/${t.constants.arabicaRollkitVersion}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.arabicaRollkitVersion),9,A)])])}const v=p(k,[["render",T]]),$={name:"MochaVersionTags",data(){return{mochaVersions:g,constants:o}}},I=["href"],R=["href"],x=["href"],D=["href"];function P(i,l,c,f,t,u){return s(),n("ul",null,[e("li",null,[a(" Celestia Chain ID - "),e("a",{href:`https://github.com/celestiaorg/networks/tree/master/${t.constants.mochaChainId}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.mochaChainId),9,I)]),e("li",null,[a(" Celestia Node - "),e("a",{href:`https://github.com/celestiaorg/celestia-node/releases/tag/${t.mochaVersions["node-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.mochaVersions["node-latest-tag"]),9,R)]),e("li",null,[a(" Celestia App - "),e("a",{href:`https://github.com/celestiaorg/celestia-app/releases/tag/${t.mochaVersions["app-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.mochaVersions["app-latest-tag"]),9,x)]),e("li",null,[a(" Rollkit - "),e("a",{href:`https://github.com/rollkit/rollkit/releases/tag/${t.constants.mochaRollkitVersion}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.mochaRollkitVersion),9,D)])])}const y=p($,[["render",P]]),N={name:"coffeeVersionTags",data(){return{coffeeVersions:b,constants:o}}},M=["href"],S=["href"],q=["href"],B=["href"];function E(i,l,c,f,t,u){return s(),n("ul",null,[e("li",null,[a(" Celestia Chain ID - "),e("a",{href:`https://github.com/celestiaorg/networks/tree/master/${t.constants.coffeeChainId}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.coffeeChainId),9,M)]),e("li",null,[a(" Celestia Node - "),e("a",{href:`https://github.com/celestiaorg/celestia-node/releases/tag/${t.coffeeVersions["node-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.coffeeVersions["node-latest-tag"]),9,S)]),e("li",null,[a(" Celestia App - "),e("a",{href:`https://github.com/celestiaorg/celestia-app/releases/tag/${t.coffeeVersions["app-latest-tag"]}`,target:"_blank",rel:"noopener noreferrer"},r(t.coffeeVersions["app-latest-tag"]),9,q)]),e("li",null,[a(" Rollkit - "),e("a",{href:`https://github.com/rollkit/rollkit/releases/tag/${t.constants.coffeeRollkitVersion}`,target:"_blank",rel:"noopener noreferrer"},r(t.constants.coffeeRollkitVersion),9,B)])])}const j=p(N,[["render",E]]),F=e("h1",{id:"participate-in-the-celestia-networks",tabindex:"-1"},[a("Participate in the Celestia networks "),e("a",{class:"header-anchor",href:"#participate-in-the-celestia-networks","aria-label":'Permalink to "Participate in the Celestia networks"'},"​")],-1),J=e("h2",{id:"coffee",tabindex:"-1"},[a("Coffee "),e("a",{class:"header-anchor",href:"#coffee","aria-label":'Permalink to "Coffee"'},"​")],-1),O=e("h2",{id:"testnets",tabindex:"-1"},[a("Testnets "),e("a",{class:"header-anchor",href:"#testnets","aria-label":'Permalink to "Testnets"'},"​")],-1),U=e("p",null,"Celestia currently has two existing testnets that you can participate in:",-1),X=m("",3),G=JSON.parse('{"title":"Participate in the Celestia networks","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Participate in the Celestia networks | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"nodes/participate.md","filePath":"nodes/participate.md","lastUpdated":1697648303000}'),H={name:"nodes/participate.md"},K=Object.assign(H,{setup(i){return(l,c)=>(s(),n("div",null,[F,J,e("ul",null,[e("li",null,[a("Coffee: TBD "),e("ul",null,[e("li",null,[a("Compatible software versions"),h(j)])])])]),O,U,e("ul",null,[e("li",null,[a("Arabica devnet: A devnet focused on developers who want to deploy sovereign rollups on the latest changes from Celestia's codebase. Arabica will be updated frequently and might be unstable at times given new updates. Validators won't be able to validate on Arabica as it is not designed for validators to participate. "),e("ul",null,[e("li",null,[a("Compatible software versions"),h(v)])])]),e("li",null,[a("Mocha testnet: A testnet focused on enabling validators to test out their infrastructure by running nodes connected to the network. Developers can also deploy sovereign rollups on Mocha, it just will always be behind Arabica as Mocha upgrades are slower given they need to be done via hardforks in coordination with the validator community on Mocha. "),e("ul",null,[e("li",null,[a("Compatible software versions"),h(y)])])])]),X,e("p",null,[a("Mocha's chain ID is currently: "),e("code",null,r(d(o).mochaChainId),1)]),e("p",null,[a("Arabica's chain ID is currently: "),e("code",null,r(d(o).arabicaChainId),1)])]))}});export{G as __pageData,K as default};
