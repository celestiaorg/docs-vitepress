import{c as l}from"./chunks/constants.ad373f0f.js";import{a as p}from"./chunks/arabica_versions.24daccca.js";import{m as e}from"./chunks/mocha_versions.7e21ef68.js";import{o as c,c as r,k as s,t as a,l as n,a as t,Q as o}from"./chunks/framework.25fa9d36.js";const E=o("",20),y=s("p",null,"Set the version for your desired network:",-1),i={class:"vp-code-group vp-adaptive-theme"},d=o("",1),F={class:"blocks"},u={class:"language-bash vp-adaptive-theme active"},h=s("button",{title:"Copy Code",class:"copy"},null,-1),C=s("span",{class:"lang"},"bash",-1),g={class:"shiki github-dark vp-code-dark"},b={class:"line"},B=s("span",{style:{color:"#E1E4E8"}},"ver",-1),q=s("span",{style:{color:"#F97583"}},"=",-1),v={style:{color:"#9ECBFF"}},m={class:"shiki github-light vp-code-light"},k={class:"line"},f=s("span",{style:{color:"#24292E"}},"ver",-1),A=s("span",{style:{color:"#D73A49"}},"=",-1),_={style:{color:"#032F62"}},w={class:"language-bash vp-adaptive-theme"},T=s("button",{title:"Copy Code",class:"copy"},null,-1),D=s("span",{class:"lang"},"bash",-1),x={class:"shiki github-dark vp-code-dark"},O={class:"line"},R=s("span",{style:{color:"#E1E4E8"}},"ver",-1),P=s("span",{style:{color:"#F97583"}},"=",-1),S={style:{color:"#9ECBFF"}},I={class:"shiki github-light vp-code-light"},N={class:"line"},$=s("span",{style:{color:"#24292E"}},"ver",-1),H=s("span",{style:{color:"#D73A49"}},"=",-1),M={style:{color:"#032F62"}},U=o("",3),L=o("",5),j=o("",1),z=s("p",null,"Check out to the desired version, based on the network you will use:",-1),G={class:"vp-code-group vp-adaptive-theme"},V=o("",1),Y={class:"blocks"},W={class:"language-bash vp-adaptive-theme active"},X=s("button",{title:"Copy Code",class:"copy"},null,-1),K=s("span",{class:"lang"},"bash",-1),J={class:"shiki github-dark vp-code-dark"},Z={class:"line"},Q=s("span",{style:{color:"#B392F0"}},"git",-1),ss=s("span",{style:{color:"#E1E4E8"}}," ",-1),as=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),ns=s("span",{style:{color:"#E1E4E8"}}," ",-1),os={style:{color:"#9ECBFF"}},ls={class:"shiki github-light vp-code-light"},ps={class:"line"},es=s("span",{style:{color:"#6F42C1"}},"git",-1),ts=s("span",{style:{color:"#24292E"}}," ",-1),cs=s("span",{style:{color:"#032F62"}},"checkout",-1),rs=s("span",{style:{color:"#24292E"}}," ",-1),Es={style:{color:"#032F62"}},ys={class:"language-bash vp-adaptive-theme"},is=s("button",{title:"Copy Code",class:"copy"},null,-1),ds=s("span",{class:"lang"},"bash",-1),Fs={class:"shiki github-dark vp-code-dark"},us={class:"line"},hs=s("span",{style:{color:"#B392F0"}},"git",-1),Cs=s("span",{style:{color:"#E1E4E8"}}," ",-1),gs=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),bs=s("span",{style:{color:"#E1E4E8"}}," ",-1),Bs={style:{color:"#9ECBFF"}},qs={class:"shiki github-light vp-code-light"},vs={class:"line"},ms=s("span",{style:{color:"#6F42C1"}},"git",-1),ks=s("span",{style:{color:"#24292E"}}," ",-1),fs=s("span",{style:{color:"#032F62"}},"checkout",-1),As=s("span",{style:{color:"#24292E"}}," ",-1),_s={style:{color:"#032F62"}},ws=o("",4),Ts=o("",55),Ds=o("",35),xs=o("",89),Ms=JSON.parse('{"title":"Celestia-node RPC CLI tutorial","description":"","frontmatter":{"head":[["meta",{"name":"og:title","content":"Celestia-node RPC CLI tutorial | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"developers/node-tutorial.md","filePath":"developers/node-tutorial.md","lastUpdated":1697750586000}'),Os={name:"developers/node-tutorial.md"},Us=Object.assign(Os,{setup(Rs){return(Ps,Ss)=>(c(),r("div",null,[E,s("ol",null,[s("li",null,[y,s("div",i,[d,s("div",F,[s("div",u,[h,C,s("pre",g,[s("code",null,[s("span",b,[B,q,s("span",v,'"'+a(n(l).golangNodeMocha)+'"',1)])])]),s("pre",m,[s("code",null,[s("span",k,[f,A,s("span",_,'"'+a(n(l).golangNodeMocha)+'"',1)])])])]),s("div",w,[T,D,s("pre",x,[s("code",null,[s("span",O,[R,P,s("span",S,'"'+a(n(l).golangNodeArabica)+'"',1)])])]),s("pre",I,[s("code",null,[s("span",N,[$,H,s("span",M,'"'+a(n(l).golangNodeArabica)+'"',1)])])])])])])]),U]),L,s("ol",null,[j,s("li",null,[z,s("div",G,[V,s("div",Y,[s("div",W,[X,K,s("pre",J,[s("code",null,[s("span",Z,[Q,ss,as,ns,s("span",os,"tags/"+a(n(e)["node-latest-tag"]),1)])])]),s("pre",ls,[s("code",null,[s("span",ps,[es,ts,cs,rs,s("span",Es,"tags/"+a(n(e)["node-latest-tag"]),1)])])])]),s("div",ys,[is,ds,s("pre",Fs,[s("code",null,[s("span",us,[hs,Cs,gs,bs,s("span",Bs,"tags/"+a(n(p)["node-latest-tag"]),1)])])]),s("pre",qs,[s("code",null,[s("span",vs,[ms,ks,fs,As,s("span",_s,"tags/"+a(n(p)["node-latest-tag"]),1)])])])])])])]),ws]),Ts,s("p",null,"To set your node store for a light node on "+a(n(l).mochaChainId)+", you can use the following command:",1),Ds,s("p",null,[t("Here is an example command to retrieve the data from above, on "),s("code",null,a(n(l).arabicaChainId),1),t(":")]),xs]))}});export{Ms as __pageData,Us as default};
