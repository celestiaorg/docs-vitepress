import{a as t}from"./chunks/arabica_versions.24daccca.js";import{m as o}from"./chunks/mocha_versions.d091215e.js";import{o as p,c,k as s,t as e,l as a,a as n,Q as l}from"./chunks/framework.25fa9d36.js";const i=s("h1",{id:"install-celestia-app",tabindex:"-1"},[n("Install celestia-app "),s("a",{class:"header-anchor",href:"#install-celestia-app","aria-label":'Permalink to "Install celestia-app"'},"â€‹")],-1),r=s("p",null,[n("This tutorial will guide you through installing celestia-app. This tutorial presumes you completed the steps in "),s("a",{href:"./environment"},"setting up your own environment"),n(".")],-1),d=s("p",null,[n("The steps below will create a binary file named "),s("code",null,"celestia-appd"),n(" inside "),s("code",null,"$HOME/go/bin"),n(" folder which will be used later to run the node. Be sure to select the correct network to install the binary for.")],-1),h=l(`<li><p>Remove any existing copy of celestia-app, clone the repository, and change into the directory:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> $HOME</span></span>
<span class="line"><span style="color:#B392F0;">rm</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">-rf</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-app</span></span>
<span class="line"><span style="color:#B392F0;">git</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">clone</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">https://github.com/celestiaorg/celestia-app.git</span></span>
<span class="line"><span style="color:#79B8FF;">cd</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">celestia-app</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> $HOME</span></span>
<span class="line"><span style="color:#6F42C1;">rm</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">-rf</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-app</span></span>
<span class="line"><span style="color:#6F42C1;">git</span><span style="color:#24292E;"> </span><span style="color:#032F62;">clone</span><span style="color:#24292E;"> </span><span style="color:#032F62;">https://github.com/celestiaorg/celestia-app.git</span></span>
<span class="line"><span style="color:#005CC5;">cd</span><span style="color:#24292E;"> </span><span style="color:#032F62;">celestia-app</span></span></code></pre></div></li>`,1),y=s("p",null,"Check out to the desired version, based on the network you will use:",-1),g={class:"vp-code-group vp-adaptive-theme"},u=l('<div class="tabs"><input type="radio" name="group-2IYlj" id="tab-_9ZTAtY" checked="checked"><label for="tab-_9ZTAtY">Mocha</label><input type="radio" name="group-2IYlj" id="tab-pP_wgK_"><label for="tab-pP_wgK_">Arabica</label></div>',1),_={class:"blocks"},m={class:"language-bash vp-adaptive-theme active"},b=s("button",{title:"Copy Code",class:"copy"},null,-1),f=s("span",{class:"lang"},"bash",-1),E={class:"shiki github-dark vp-code-dark"},v={class:"line"},C=s("span",{style:{color:"#B392F0"}},"git",-1),F=s("span",{style:{color:"#E1E4E8"}}," ",-1),k=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),T=s("span",{style:{color:"#E1E4E8"}}," ",-1),B={style:{color:"#9ECBFF"}},w=s("span",{style:{color:"#E1E4E8"}}," ",-1),P=s("span",{style:{color:"#79B8FF"}},"-b",-1),x=s("span",{style:{color:"#E1E4E8"}}," ",-1),q={style:{color:"#9ECBFF"}},I={class:"shiki github-light vp-code-light"},A={class:"line"},S=s("span",{style:{color:"#6F42C1"}},"git",-1),V=s("span",{style:{color:"#24292E"}}," ",-1),j=s("span",{style:{color:"#032F62"}},"checkout",-1),D=s("span",{style:{color:"#24292E"}}," ",-1),N={style:{color:"#032F62"}},M=s("span",{style:{color:"#24292E"}}," ",-1),R=s("span",{style:{color:"#005CC5"}},"-b",-1),U=s("span",{style:{color:"#24292E"}}," ",-1),O={style:{color:"#032F62"}},Q={class:"language-bash vp-adaptive-theme"},G=s("button",{title:"Copy Code",class:"copy"},null,-1),H=s("span",{class:"lang"},"bash",-1),L={class:"shiki github-dark vp-code-dark"},Y={class:"line"},J=s("span",{style:{color:"#B392F0"}},"git",-1),W=s("span",{style:{color:"#E1E4E8"}}," ",-1),$=s("span",{style:{color:"#9ECBFF"}},"checkout",-1),z=s("span",{style:{color:"#E1E4E8"}}," ",-1),K={style:{color:"#9ECBFF"}},Z=s("span",{style:{color:"#E1E4E8"}}," ",-1),X=s("span",{style:{color:"#79B8FF"}},"-b",-1),ss=s("span",{style:{color:"#E1E4E8"}}," ",-1),es={style:{color:"#9ECBFF"}},as={class:"shiki github-light vp-code-light"},ns={class:"line"},ts=s("span",{style:{color:"#6F42C1"}},"git",-1),os=s("span",{style:{color:"#24292E"}}," ",-1),ls=s("span",{style:{color:"#032F62"}},"checkout",-1),ps=s("span",{style:{color:"#24292E"}}," ",-1),cs={style:{color:"#032F62"}},is=s("span",{style:{color:"#24292E"}}," ",-1),rs=s("span",{style:{color:"#005CC5"}},"-b",-1),ds=s("span",{style:{color:"#24292E"}}," ",-1),hs={style:{color:"#032F62"}},ys=l('<li><p>Build and install the <code>celestia-appd</code> binary:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">make</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span></span></code></pre></div></li>',1),gs=l(`<p>To check if the binary was successfully installed you can run the binary using the <code>--help</code> flag:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">celestia-appd</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--help</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">celestia-appd</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--help</span></span></code></pre></div><p>You should see a similar output (with helpful example commands):</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">Start celestia app</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Usage:</span></span>
<span class="line"><span style="color:#e1e4e8;">  celestia-appd [command]</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Available Commands:</span></span>
<span class="line"><span style="color:#e1e4e8;">  add-genesis-account            Add a genesis account to genesis.json</span></span>
<span class="line"><span style="color:#e1e4e8;">  collect-gentxs                 Collect genesis txs and output a genesis.json file</span></span>
<span class="line"><span style="color:#e1e4e8;">  config                         Create or query an application CLI configuration file</span></span>
<span class="line"><span style="color:#e1e4e8;">  debug                          Tool for helping with debugging your application</span></span>
<span class="line"><span style="color:#e1e4e8;">  experimental-compact-goleveldb force compacts the CometBFT storage engine (only GoLevelDB supported)</span></span>
<span class="line"><span style="color:#e1e4e8;">  export                         Export state to JSON</span></span>
<span class="line"><span style="color:#e1e4e8;">  gentx                          Generate a genesis tx carrying a self delegation</span></span>
<span class="line"><span style="color:#e1e4e8;">  help                           Help about any command</span></span>
<span class="line"><span style="color:#e1e4e8;">  init                           Initialize private validator, p2p, genesis, and application configuration files</span></span>
<span class="line"><span style="color:#e1e4e8;">  keys                           Manage your application&#39;s keys</span></span>
<span class="line"><span style="color:#e1e4e8;">  migrate                        Migrate genesis to a specified target version</span></span>
<span class="line"><span style="color:#e1e4e8;">  query                          Querying subcommands</span></span>
<span class="line"><span style="color:#e1e4e8;">  rollback                       rollback cosmos-sdk and tendermint state by one height</span></span>
<span class="line"><span style="color:#e1e4e8;">  start                          Run the full node</span></span>
<span class="line"><span style="color:#e1e4e8;">  status                         Query remote node for status</span></span>
<span class="line"><span style="color:#e1e4e8;">  tendermint                     Tendermint subcommands</span></span>
<span class="line"><span style="color:#e1e4e8;">  tx                             Transactions subcommands</span></span>
<span class="line"><span style="color:#e1e4e8;">  validate-genesis               validates the genesis file at the default location or at the location passed as an arg</span></span>
<span class="line"><span style="color:#e1e4e8;">  verify                         Verifies that a transaction hash, a range of shares, or a blob referenced by its transaction hash were committed to by the QGB contract</span></span>
<span class="line"><span style="color:#e1e4e8;">  version                        Print the application binary version information</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Flags:</span></span>
<span class="line"><span style="color:#e1e4e8;">  -h, --help                 help for celestia-appd</span></span>
<span class="line"><span style="color:#e1e4e8;">      --home string          directory for config and data (default &quot;/Users/joshcs/.celestia-app&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">      --log-to-file string   Write logs directly to a file. If empty, logs are written to stderr</span></span>
<span class="line"><span style="color:#e1e4e8;">      --log_format string    The logging format (json|plain) (default &quot;plain&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">      --log_level string     The logging level (trace|debug|info|warn|error|fatal|panic) (default &quot;info&quot;)</span></span>
<span class="line"><span style="color:#e1e4e8;">      --trace                print out full stack trace on errors</span></span>
<span class="line"><span style="color:#e1e4e8;"></span></span>
<span class="line"><span style="color:#e1e4e8;">Use &quot;celestia-appd [command] --help&quot; for more information about a command.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">Start celestia app</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Usage:</span></span>
<span class="line"><span style="color:#24292e;">  celestia-appd [command]</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Available Commands:</span></span>
<span class="line"><span style="color:#24292e;">  add-genesis-account            Add a genesis account to genesis.json</span></span>
<span class="line"><span style="color:#24292e;">  collect-gentxs                 Collect genesis txs and output a genesis.json file</span></span>
<span class="line"><span style="color:#24292e;">  config                         Create or query an application CLI configuration file</span></span>
<span class="line"><span style="color:#24292e;">  debug                          Tool for helping with debugging your application</span></span>
<span class="line"><span style="color:#24292e;">  experimental-compact-goleveldb force compacts the CometBFT storage engine (only GoLevelDB supported)</span></span>
<span class="line"><span style="color:#24292e;">  export                         Export state to JSON</span></span>
<span class="line"><span style="color:#24292e;">  gentx                          Generate a genesis tx carrying a self delegation</span></span>
<span class="line"><span style="color:#24292e;">  help                           Help about any command</span></span>
<span class="line"><span style="color:#24292e;">  init                           Initialize private validator, p2p, genesis, and application configuration files</span></span>
<span class="line"><span style="color:#24292e;">  keys                           Manage your application&#39;s keys</span></span>
<span class="line"><span style="color:#24292e;">  migrate                        Migrate genesis to a specified target version</span></span>
<span class="line"><span style="color:#24292e;">  query                          Querying subcommands</span></span>
<span class="line"><span style="color:#24292e;">  rollback                       rollback cosmos-sdk and tendermint state by one height</span></span>
<span class="line"><span style="color:#24292e;">  start                          Run the full node</span></span>
<span class="line"><span style="color:#24292e;">  status                         Query remote node for status</span></span>
<span class="line"><span style="color:#24292e;">  tendermint                     Tendermint subcommands</span></span>
<span class="line"><span style="color:#24292e;">  tx                             Transactions subcommands</span></span>
<span class="line"><span style="color:#24292e;">  validate-genesis               validates the genesis file at the default location or at the location passed as an arg</span></span>
<span class="line"><span style="color:#24292e;">  verify                         Verifies that a transaction hash, a range of shares, or a blob referenced by its transaction hash were committed to by the QGB contract</span></span>
<span class="line"><span style="color:#24292e;">  version                        Print the application binary version information</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Flags:</span></span>
<span class="line"><span style="color:#24292e;">  -h, --help                 help for celestia-appd</span></span>
<span class="line"><span style="color:#24292e;">      --home string          directory for config and data (default &quot;/Users/joshcs/.celestia-app&quot;)</span></span>
<span class="line"><span style="color:#24292e;">      --log-to-file string   Write logs directly to a file. If empty, logs are written to stderr</span></span>
<span class="line"><span style="color:#24292e;">      --log_format string    The logging format (json|plain) (default &quot;plain&quot;)</span></span>
<span class="line"><span style="color:#24292e;">      --log_level string     The logging level (trace|debug|info|warn|error|fatal|panic) (default &quot;info&quot;)</span></span>
<span class="line"><span style="color:#24292e;">      --trace                print out full stack trace on errors</span></span>
<span class="line"><span style="color:#24292e;"></span></span>
<span class="line"><span style="color:#24292e;">Use &quot;celestia-appd [command] --help&quot; for more information about a command.</span></span></code></pre></div><h2 id="ports" tabindex="-1">Ports <a class="header-anchor" href="#ports" aria-label="Permalink to &quot;Ports&quot;">â€‹</a></h2><p>When interacting with a consensus node, you may need to open ports on your machine to allow communication between nodes, such as bridge nodes. It is essential that specific ports are accessible. Make sure that your firewall allows connections to the correct ports.</p><p>If you run a node on a cloud server, make sure that the ports are open on the server&#39;s firewall. If you run a node at home, make sure that your router allows connections to the correct ports.</p><p>For example, validator ports 9090 and 26657 need to be accessible by the bridge, and port 2121 is required for P2P connections for all node types.</p><p>The following ports are used by Celestia app nodes:</p><table><thead><tr><th>Port</th><th>Protocol</th><th>Address</th><th>Description</th><th>Enabled by default on node</th><th>Flag</th></tr></thead><tbody><tr><td>2121</td><td>TCP/UDP</td><td>localhost</td><td>P2P</td><td>true</td><td>N/A</td></tr><tr><td>9090</td><td>HTTP</td><td>0.0.0.0</td><td>gRPC</td><td>true</td><td><code>--grpc.address string</code></td></tr><tr><td>26657</td><td>TCP</td><td>localhost</td><td>RPC</td><td>false (only open to localhost)</td><td><code>--rpc.laddr string</code></td></tr></tbody></table>`,10),Cs=JSON.parse('{"title":"Install celestia-app","description":"Learn how you can build celestia-app.","frontmatter":{"description":"Learn how you can build celestia-app.","head":[["meta",{"name":"og:title","content":"Install celestia-app | Celestia Docs"},{"name":"og:description","content":false}]]},"headers":[],"relativePath":"nodes/celestia-app.md","filePath":"nodes/celestia-app.md","lastUpdated":1697826708000}'),us={name:"nodes/celestia-app.md"},Fs=Object.assign(us,{setup(_s){return(ms,bs)=>(p(),c("div",null,[i,r,d,s("ol",null,[h,s("li",null,[y,s("div",g,[u,s("div",_,[s("div",m,[b,f,s("pre",E,[s("code",null,[s("span",v,[C,F,k,T,s("span",B,"tags/"+e(a(o)["app-latest-tag"]),1),w,P,x,s("span",q,e(a(o)["app-latest-tag"]),1)])])]),s("pre",I,[s("code",null,[s("span",A,[S,V,j,D,s("span",N,"tags/"+e(a(o)["app-latest-tag"]),1),M,R,U,s("span",O,e(a(o)["app-latest-tag"]),1)])])])]),s("div",Q,[G,H,s("pre",L,[s("code",null,[s("span",Y,[J,W,$,z,s("span",K,"tags/"+e(a(t)["app-latest-tag"]),1),Z,X,ss,s("span",es,e(a(t)["app-latest-tag"]),1)])])]),s("pre",as,[s("code",null,[s("span",ns,[ts,os,ls,ps,s("span",cs,"tags/"+e(a(t)["app-latest-tag"]),1),is,rs,ds,s("span",hs,e(a(t)["app-latest-tag"]),1)])])])])])])]),ys]),gs]))}});export{Cs as __pageData,Fs as default};
